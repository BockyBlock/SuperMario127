[gd_scene load_steps=11 format=2]

[ext_resource path="res://scenes/actors/objects/water_bubble/water_bubble.gd" type="Script" id=1]
[ext_resource path="res://scenes/actors/objects/water_bubble/CircleArea.gd" type="Script" id=2]

[sub_resource type="Shader" id=2]
code = "shader_type canvas_item;

uniform vec4 color_tint : hint_color;

void fragment() {
	vec4 color = textureLod(SCREEN_TEXTURE, SCREEN_UV, 0.0);
	
	color = mix(color, color_tint, 0.4);
	color.rgb = mix(vec3(0.5), color.rgb, 1.4);
	
	COLOR = color;
}"

[sub_resource type="ShaderMaterial" id=7]
shader = SubResource( 2 )
shader_param/color_tint = Color( 0.278431, 0.662745, 0.85098, 1 )

[sub_resource type="Shader" id=8]
code = "shader_type canvas_item;

uniform vec4 color_tint : hint_color;
uniform float scale;

float rand(vec2 co){
    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);
}

float sine(vec2 uv_coords, float time, float arg1, float arg2) {
	return sin((uv_coords.x * arg1 * (scale / 1500.0f)) + time * arg2);
}

void fragment() {
	vec4 color = textureLod(SCREEN_TEXTURE, SCREEN_UV, 0.0);
	
	color = mix(color, color_tint, 0.4);
	color.rgb = mix(vec3(0.5), color.rgb, 1.4);
	
	float final_sine = ( cos(TIME) * cos(UV.x/scale+.25/scale)/3.0 ) + ( cos(TIME+.55) * sin(UV.x/scale-.25/scale)/4.0 );
	float sine_height = (final_sine / 5.0f)+.1f;
	if (UV.y < sine_height) {
		color.a = 0.0;
	} else {
		float gradient_pos = round(((UV.y * 2.0) - (sine_height * 2.0)) * 3.0) / 3.0;
		float mix_amount = clamp(1.0 - gradient_pos, 0.0, 1.0);
		color.rgb = mix(color.rgb, vec3(1), mix_amount);
	}
	
	COLOR = color;
}"

[sub_resource type="ShaderMaterial" id=9]
shader = SubResource( 8 )
shader_param/color_tint = Color( 0.278431, 0.662745, 0.85098, 1 )
shader_param/scale = 1.0

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 8 )
shader_param/color_tint = Color( 0.278431, 0.662745, 0.85098, 1 )
shader_param/scale = null

[sub_resource type="Shader" id=4]
code = "shader_type canvas_item;

uniform vec4 color_tint : hint_color;
uniform float x_size;

float rand(vec2 co){
    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);
}

float sine(vec2 uv_coords, float time, float arg1, float arg2) {
	return sin((uv_coords.x * arg1 * (x_size / 1500.0f)) + time * arg2);
}

void fragment() {
	vec4 color = textureLod(SCREEN_TEXTURE, SCREEN_UV, 0.0);
	
	color = mix(color, color_tint, 0.4);
	color.rgb = mix(vec3(0.5), color.rgb, 1.4);
	
	float final_sine = sine(UV, TIME / 2.0f, 20.5f, 5.5f) * sine(UV, TIME / 2.0f, 15.5f, 5.5f) * sine(UV, TIME / 2.0f, 30.5f, 5.5f);
	float sine_height = (final_sine / 5.0f) + 0.25f;
	if (UV.y < sine_height) {
		color.a = 0.0;
	} else {
		float gradient_pos = round(((UV.y * 2.0) - (sine_height * 2.0)) * 3.0) / 3.0;
		float mix_amount = clamp(1.0 - gradient_pos, 0.0, 1.0);
		color.rgb = mix(color.rgb, vec3(1), mix_amount);
	}
	
	COLOR = color;
}"

[sub_resource type="ShaderMaterial" id=5]
shader = SubResource( 4 )
shader_param/color_tint = Color( 0.278431, 0.662745, 0.85098, 1 )
shader_param/x_size = 1800.0

[sub_resource type="CircleShape2D" id=6]
radius = 128.0

[node name="WaterBubble" type="Node2D"]
z_index = -1
script = ExtResource( 1 )

[node name="Fill" type="Polygon2D" parent="."]
material = SubResource( 7 )
color = Color( 0.192157, 0.52549, 1, 0.47451 )
polygon = PoolVector2Array( 112, 0, 111.803, 6.63495, 111.214, 13.2466, 110.234, 19.8117, 108.867, 26.3072, 107.117, 32.7104, 104.991, 38.9986, 102.496, 45.1498, 99.6416, 51.1425, 96.4369, 56.9555, 92.8934, 62.5684, 89.0237, 67.9616, 84.8413, 73.1161, 80.3608, 78.0137, 75.5981, 82.6373, 70.5698, 86.9707, 65.2937, 90.9985, 59.7882, 94.7067, 54.0727, 98.0823, 48.1673, 101.113, 42.0927, 103.789, 35.8702, 106.101, 29.5218, 108.039, 23.0696, 109.598, 16.5364, 110.772, 9.94514, 111.558, 3.31893, 111.951, -3.31893, 111.951, -9.94514, 111.558, -16.5364, 110.772, -23.0696, 109.598, -29.5218, 108.039, -35.8702, 106.101, -42.0927, 103.789, -48.1673, 101.113, -54.0727, 98.0823, -59.7882, 94.7067, -65.2937, 90.9985, -70.5698, 86.9707, -75.5981, 82.6373, -80.3608, 78.0137, -84.8413, 73.1161, -89.0237, 67.9616, -92.8934, 62.5684, -96.4369, 56.9555, -99.6416, 51.1425, -102.496, 45.1498, -104.991, 38.9986, -107.117, 32.7104, -108.867, 26.3072, -110.234, 19.8117, -111.214, 13.2466, -111.803, 6.63495, -112, 1.37156e-14, -111.803, -6.63495, -111.214, -13.2466, -110.234, -19.8117, -108.867, -26.3072, -107.117, -32.7104, -104.991, -38.9986, -102.496, -45.1498, -99.6416, -51.1425, -96.4369, -56.9555, -92.8934, -62.5684, -89.0237, -67.9616, -84.8413, -73.1161, -80.3608, -78.0137, -75.5981, -82.6373, -70.5698, -86.9707, -65.2937, -90.9985, -59.7882, -94.7067, -54.0727, -98.0823, -48.1673, -101.113, -42.0927, -103.789, -35.8702, -106.101, -29.5218, -108.039, -23.0696, -109.598, -16.5364, -110.772, -9.94514, -111.558, -3.31893, -111.951, 3.31893, -111.951, 9.94514, -111.558, 16.5364, -110.772, 23.0696, -109.598, 29.5218, -108.039, 35.8702, -106.101, 42.0927, -103.789, 48.1673, -101.113, 54.0727, -98.0823, 59.7882, -94.7067, 65.2937, -90.9985, 70.5698, -86.9707, 75.5981, -82.6373, 80.3608, -78.0137, 84.8413, -73.1161, 89.0237, -67.9616, 92.8934, -62.5684, 96.4369, -56.9555, 99.6416, -51.1425, 102.496, -45.1498, 104.991, -38.9986, 107.117, -32.7104, 108.867, -26.3072, 110.234, -19.8117, 111.214, -13.2466, 111.803, -6.63495, 112, 0, 111.803, 6.63495 )

[node name="Line" type="Line2D" parent="."]
material = SubResource( 9 )
points = PoolVector2Array( 128, 0, 127.827, 6.64369, 127.31, 13.2695, 126.45, 19.8595, 125.249, 26.3959, 123.71, 32.8613, 121.838, 39.238, 119.637, 45.5089, 117.113, 51.6572, 114.274, 57.6662, 111.127, 63.5197, 107.68, 69.202, 103.943, 74.6978, 99.9263, 79.9921, 95.6397, 85.0709, 91.0952, 89.9203, 86.3053, 94.5273, 81.2826, 98.8794, 76.0408, 102.965, 70.594, 106.773, 64.957, 110.293, 59.1448, 113.516, 53.1731, 116.433, 47.0581, 119.036, 40.8163, 121.318, 34.4644, 123.273, 28.0196, 124.896, 21.4993, 126.182, 14.921, 127.127, 8.30251, 127.73, 1.66162, 127.989, -4.98375, 127.903, -11.6157, 127.472, -18.2163, 126.697, -24.7678, 125.581, -31.2526, 124.126, -37.653, 122.337, -43.952, 120.217, -50.1325, 117.774, -56.1779, 115.013, -62.0718, 111.942, -67.7983, 108.57, -73.3421, 104.904, -78.6882, 100.956, -83.8222, 96.7359, -88.7302, 92.2549, -93.3989, 87.5251, -97.8159, 82.5593, -101.969, 77.371, -105.848, 71.9742, -109.441, 66.3832, -112.739, 60.6134, -115.733, 54.6801, -118.415, 48.5994, -120.778, 42.3877, -122.815, 36.0618, -124.521, 29.6386, -125.892, 23.1355, -126.923, 16.5701, -127.612, 9.95994, -127.957, 3.32296, -127.957, -3.32296, -127.612, -9.95994, -126.923, -16.5701, -125.892, -23.1355, -124.521, -29.6386, -122.815, -36.0618, -120.778, -42.3877, -118.415, -48.5994, -115.733, -54.6801, -112.739, -60.6134, -109.441, -66.3832, -105.848, -71.9742, -101.969, -77.371, -97.8159, -82.5593, -93.3989, -87.5251, -88.7302, -92.2549, -83.8222, -96.7359, -78.6882, -100.956, -73.3421, -104.904, -67.7983, -108.57, -62.0718, -111.942, -56.1779, -115.013, -50.1325, -117.774, -43.952, -120.217, -37.653, -122.337, -31.2526, -124.126, -24.7678, -125.581, -18.2163, -126.697, -11.6157, -127.472, -4.98375, -127.903, 1.66162, -127.989, 8.30251, -127.73, 14.921, -127.127, 21.4993, -126.182, 28.0196, -124.896, 34.4644, -123.273, 40.8163, -121.318, 47.0581, -119.036, 53.1731, -116.433, 59.1448, -113.516, 64.957, -110.293, 70.594, -106.773, 76.0408, -102.965, 81.2826, -98.8794, 86.3053, -94.5273, 91.0952, -89.9203, 95.6397, -85.0709, 99.9263, -79.9921, 103.943, -74.6978, 107.68, -69.202, 111.127, -63.5197, 114.274, -57.6662, 117.113, -51.6572, 119.637, -45.5089, 121.838, -39.238, 123.71, -32.8613, 125.249, -26.3959, 126.45, -19.8595, 127.31, -13.2695, 127.827, -6.64369, 128, 0, 127.827, 6.64369 )
width = 32.0
default_color = Color( 0.192157, 0.52549, 1, 0.47451 )
texture_mode = 1
joint_mode = 2
round_precision = 20

[node name="ColorRect" type="ColorRect" parent="."]
visible = false
material = SubResource( 3 )
margin_top = 15.0
margin_right = 1800.0
margin_bottom = 600.0
mouse_filter = 2
color = Color( 0.192157, 0.52549, 1, 0.47451 )

[node name="Waves" type="ColorRect" parent="."]
visible = false
material = SubResource( 5 )
margin_top = -15.0
margin_right = 1800.0
margin_bottom = 15.0
mouse_filter = 2
color = Color( 0.192157, 0.52549, 1, 0.47451 )

[node name="Col" type="Area2D" parent="."]
collision_layer = 128
collision_mask = 128
script = ExtResource( 2 )
outer_path = NodePath("../Line")
fill_path = NodePath("../Fill")

[node name="Shape" type="CollisionShape2D" parent="Col"]
visible = false
shape = SubResource( 6 )
