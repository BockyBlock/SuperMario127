[gd_scene load_steps=6 format=2]

[ext_resource path="res://scenes/editor/sounds/hover.wav" type="AudioStream" id=1]
[ext_resource path="res://scenes/editor/assets/window_close_hover.png" type="Texture" id=2]
[ext_resource path="res://scenes/editor/sounds/click2.wav" type="AudioStream" id=4]
[ext_resource path="res://scenes/editor/assets/window_close.png" type="Texture" id=5]

[sub_resource type="GDScript" id=1]
script/source = "extends NinePatchRect

var path_node = preload(\"res://scenes/editor/property_type_scenes/Path/PathNode.tscn\")

export var close_button : NodePath
onready var object_property_button = $Control
onready var curve_points
onready var global_position
onready var first_node : Node2D
onready var last_placed_node : Node2D
onready var editor = get_tree().get_current_scene()

var editing_object: GameObject


func _ready():
	grab_focus()
	#draw the object's current curve2D
	
func initialize(object_ref):
	set_object_property_button(object_ref)

func _process(delta):
	pass
		
		
func _unhandled_input(event) -> void:
	if event.is_action_released(\"ui_accept\"):
		print(\"true\")
		add_node(editor.last_mouse_pos)
	
func add_node(point : Vector2):
	var new_node = path_node.instance()
	new_node.position = point
	print(\"position\")
	print(new_node.position)
	if !is_instance_valid(first_node):
		first_node = new_node
		editor.add_child(new_node)
	else:
		first_node.add_child(new_node)
		new_node.prevnode = last_placed_node
		last_placed_node.nextnode = new_node
	print(new_node.get_parent())
	last_placed_node = new_node
	
func close():
	first_node.queue_free()
	queue_free()
	#TODO: Make a hide function for the editor window.
	editor.object_settings.visible = true
	
func set_object_property_button(button: Control):
	object_property_button = button
	#object settings window lol
	#TODO: Make this use a reference to the object rather than a reference to the property button.
	#TODO: Add an object reference to the property button.
	#TODO: Make a hide function for the editor window.
	editor.object_settings.visible = false
	curve_points = button.get_value().get_baked_points()
	global_position = editing_object.global_position
	for point in curve_points:
		add_node(point + global_position)
	var nextnode = first_node
	while(is_instance_valid(nextnode)):
		print(nextnode.position)
		print(nextnode.visible)
		nextnode = nextnode.nextnode

func close_pressed():
	close()
"

[node name="PathEditorUI" type="NinePatchRect"]
margin_left = -1.0
margin_top = 2.0
margin_right = 764.0
margin_bottom = 434.0
rect_pivot_offset = Vector2( -196.524, -9 )
mouse_filter = 0
region_rect = Rect2( 0, 0, 108, 290 )
patch_margin_left = 40
patch_margin_top = 110
patch_margin_right = 40
patch_margin_bottom = 40
script = SubResource( 1 )
close_button = NodePath("CloseButton")

[node name="CloseButton" type="TextureButton" parent="."]
margin_left = 293.999
margin_top = 14.977
margin_right = 448.999
margin_bottom = 95.977
rect_scale = Vector2( 0.5, 0.5 )
texture_normal = ExtResource( 5 )
texture_pressed = ExtResource( 5 )
texture_hover = ExtResource( 2 )

[node name="HoverSound" type="AudioStreamPlayer" parent="CloseButton"]
stream = ExtResource( 1 )
volume_db = -10.0

[node name="ClickSound" type="AudioStreamPlayer" parent="CloseButton"]
stream = ExtResource( 4 )
volume_db = -10.0

[node name="Tween" type="Tween" parent="."]

[node name="Control" type="Control" parent="."]
margin_right = 40.0
margin_bottom = 40.0

[connection signal="pressed" from="CloseButton" to="." method="close_pressed"]
